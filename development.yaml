# set various logging levels
loggers:
  engineio: 30

# Database connection parameters. Will be splatted, so therefore check out the
# valid parameters for the chosen database connection library (eg sqlite3,
# psycopg...).
database:
  database: busme
  user: busme_admin
  host: '127.0.0.1'
  port: '5432'
  password: busme_admin

# Various authentication parameters.
authentication:
  # API identifier. Should be listed in the dashboard under "identifier", and
  # should look like a URL (though it doesn't have to).
  api_id: bus_me

  # parameters to authenticate ID Token JWTs.
  id_token_params:
    # A list of acceptable algorithms for verifying JWTs. A list of available
    # algorithms is provided here:
    # https://pyjwt.readthedocs.io/en/latest/algorithms.html
    algorithms: ["RS256"]
    audience: l3VFomJk2JRrNZ2BnymXuH54yfhjPgfe

  # OpenID configuration URI.
  # https://auth0.com/docs/protocols/oidc/openid-connect-discovery
  # https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata
  openid_discovery: https://bus-me-us.auth0.com/.well-known/openid-configuration

  # Management API base URI.
  management_api: https://bus-me-us.auth0.com

  # Management API access token generator parameters
  # https://auth0.com/docs/api/management/v2/get-access-tokens-for-production
  management_params:
    client_id: LCOp67B4H65jf90jnCsuXzmoK56P18Ti
    client_secret: iGOztHf1PC2QxemELnmTaHX39gOw1grLLokLKRVo-FFau8nktqf3ffiYK_JueXEh
    audience: https://bus-me-us.auth0.com/api/v2/
    grant_type: client_credentials

# Management API permissions mapping. As this app cannot dynamically generate
# permissions (or?) it is up to you to map these roles correctly, and ensure
# that they actually exist on both sides, or else a lot of people will be very
# unhappy.
permissions:
  create_organization: create:organization
  create_route: create:route

# ssl stuff
ssl:
  # cert:
  # key:
